name: Deploy The Application to Heroku

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy_backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create .env File
        run: |
          touch .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "PASSWORD=${{ secrets.PASSWORD }}" >> .env
          echo "DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}" >> .env
          echo "USER=${{ secrets.USER }}" >> .env
          echo "AZURE_ACCOUNT_NAME=${{ secrets.AZURE_ACCOUNT_NAME }}" >> .env
          echo "AZURE_ACCOUNT_KEY=${{ secrets.AZURE_ACCOUNT_KEY }}" >> .env
          echo "AZURE_MEDIA_CONTAINER=${{ secrets.AZURE_MEDIA_CONTAINER }}" >> .env
          echo "AZURE_STATIC_CONTAINER=${{ secrets.AZURE_STATIC_CONTAINER }}" >> .env
          echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
          echo "CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}" >> .env
          echo "HOST=${{ secrets.HOST }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DEBUG=False" >> .env
          echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" >> .env

      - name: Debug .env File
        run: cat .env

      - name: Login to Heroku Container Registry
        run: heroku container:login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Build and Push Backend Docker Container
        run: |
          docker build -t movies-db-app_backend -f Dockerfile.backend .
          docker tag movies-db-app_backend registry.heroku.com/movies-db-app/web
          docker push registry.heroku.com/movies-db-app/web

      - name: Release Backend Container
        run: heroku container:release web --app movies-db-app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Execute Migrations
        run: |
          heroku run --app movies-db-app "echo $DB_NAME"
          heroku run --app movies-db-app "echo $AZURE_ACCOUNT_NAME"
          heroku run --app movies-db-app "echo $ALLOWED_HOSTS"
          heroku run python manage.py migrate --app movies-db-app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Collect Static Files
        run: heroku run python manage.py collectstatic --noinput --app movies-db-app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

  build_and_deploy_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Heroku Container Registry
        run: heroku container:login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Build and Push Frontend Docker Container
        run: |
          docker build -t movies-db-app_frontend -f Dockerfile.frontend .
          docker tag movies-db-app_frontend registry.heroku.com/fe-movies-db/web
          docker push registry.heroku.com/fe-movies-db/web

      - name: Release Frontend Container
        run: heroku container:release web --app fe-movies-db
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
