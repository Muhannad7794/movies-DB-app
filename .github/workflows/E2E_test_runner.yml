name: E2E Tests Runner

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.4'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # install Node Js
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'


      # install npm
      - name: Install npm Dependencies
        run: |
          cd frontend_movies_db 
          npm install

      # configure the secret key
      - name: Set Django Secret Key
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

      # Configure Debug Mode
      - name: Set Debug Mode
        run: |
          echo "DEBUG=${{secrets.DEBUG}}" >> $GITHUB_ENV

      # add API key for the movie database
      - name: Set Movie Database API Key
        run: |
          echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" >> $GITHUB_ENV


      # configure and decode the SSL certificate for the database
      - name: Decode SSL Certificate
        run: |
          mkdir -p certificates
          echo "${{ secrets.ca }}" | base64 -d > ./certificates/DigiCertGlobalRootCA.crt.pem
          echo "ca=./certificates/DigiCertGlobalRootCA.crt.pem" >> $GITHUB_ENV

      #  configure the database connection string
      - name: Set Database Environment Variables
        run: |
          echo "USER=${{ secrets.USER }}" >> $GITHUB_ENV
          echo "PASSWORD=${{ secrets.PASSWORD }}" >> $GITHUB_ENV
          echo "HOST=${{ secrets.HOST }}" >> $GITHUB_ENV
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
          echo "NAME=movies_db" >> $GITHUB_ENV
      
      # install chrome driver
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      # set up chrome driver
      - name: Set up Chrome WebDriver
        uses: browser-actions/setup-chrome@v1

      - name: Start Django Server
        run: |
          python movies_DB/manage.py runserver &  # Starts the server in the background
          sleep 10  # Gives the server some time to start

      - name: Start React Server
        run: |
          cd frontend_movies_db 
          export HOST=localhost 
          export PORT=3307
          npm start &
          sleep 10

      # run the tests

      - name: Run E2E Tests
        run: |
          pytest tests/ui_headless
          
